% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sync.R
\name{sync}
\alias{sync}
\title{Keeps shiny inputs in sync (e.g. across tabs)}
\usage{
sync(reactives_to_sync, input_ids, update_function,
  update_arg = "selected", ...)
}
\arguments{
\item{reactives_to_sync}{Reactives that should always have the same value
Typically outputs from the UI to sync.}

\item{input_ids}{Unique ids of the inputs to sync. Used in the call to
`update_function`}

\item{update_function}{Function to call to update the value}

\item{update_arg}{Name of the argument to update in the update_function}

\item{...}{Passed to the update function. Typically, `session` is often
required.}
}
\description{
Keeps shiny inputs in sync (e.g. across tabs)
}
\details{
Be aware that a `uiOutput` is only rendered when visible. This means
 that an input inside a `renderUI` does not exist until the corresponding
 `uiOutput` has been shown! This can be delayed if the `uiOutput` is in a
 separate tab, or in a collapsed box, or for some reason not visible when the app starts.

  If such an input is used to sync, then when the synced input suddenly "appears",
  it will reset all the synced inputs to the initial value.

  To avoid that, you can force the UI to render as soon as the app starts by calling
  ` outputOptions(output, ui_id, suspendWhenHidden = FALSE)` in the server function.
}
\examples{
\dontrun{
make_selectInput <- function(id) {
  selectInput(id, label = id, choices = 1:10)
}

server <- function(input, output, session) {
  sel1 <- reactive(input$First)
  sel2 <- reactive(input$Second)
  sel3 <- reactive(input$Third)

  sync(
    reactives_to_sync = list(sel1, sel2, sel3),
    input_ids = c("First", "Second", "Third"),
    update_function = updateSelectInput,
    update_arg = "selected",
    session = session
  )
}

shinyApp(
  ui = fluidPage(
    make_selectInput("First"),
    make_selectInput("Second"),
    make_selectInput("Third")
  ),
  server = server
)

# Also works across tabs.
shinyApp(
  ui = navbarPage(
    "Sync demo",
    tabPanel("tab1", make_selectInput("First")),
    tabPanel("tab2", make_selectInput("Second")),
    tabPanel("tab3", make_selectInput("Third"))
  ),
  server = server
)
}
}
